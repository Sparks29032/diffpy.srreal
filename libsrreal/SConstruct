# This requires scons 0.98 or higher


# Customizable compile variables
vars = Variables('sconsvars.py')
vars.Add('tests', 'Custom list of unit test sources', 'all')
vars.Add(EnumVariable('build', 'compiler settings', 'debug',
                      allowed_values=('debug', 'fast')))

# Default build environment
env = DefaultEnvironment(variables=vars)
Help(vars.GenerateHelpText(env))
if env['build'] == 'debug':
    env.Append(CCFLAGS='-g')
env.Append(CCFLAGS='-Wall')

# Library target
src_lib = [f for f in Glob('*.cpp') if not str(f).startswith('Test')]

libsrreal = SharedLibrary('libsrreal', src_lib)
lib = Alias('lib', libsrreal)

# Environment for building unit test driver
env_test = env.Clone()
env_test.ParseConfig('pkg-config --cflags --libs cppunit')
env_test.Append(LIBS='libsrreal', LIBPATH='.')
env_test.AppendENVPath('LD_LIBRARY_PATH', '.')

# alltests - the unit test driver
if env_test['tests'] == 'all':
    src_tests = Glob('Test*.cpp')
else:
    src_tests = Split(env_test['tests']) 
alltests = env_test.Program('alltests', ['alltests.cpp'] + src_tests)

# alias for executing unit test modules
test = env_test.Alias('test', [alltests], alltests[0].abspath)
AlwaysBuild(test)

Default(alltests)

# vim: ft=python
